# Generated by Django 2.2 on 2023-04-07 16:32

from django.db import migrations
from APIcashless.models import MoyenPaiement
def set_categorie_to_moyen_paiement(apps, schema_editor):
    """
    On rajoute les categorie.
    On utilisait configuration.monnaie pour savoir quel etait le moyen de paiement
    cela faisait beaucoup d'appel en base de donn√©e pour une information qui ne bouge pas.
    Utilisons maintenant les choices :

    LOCAL_EURO = 'LE'
    LOCAL_GIFT = 'LG'
    ARDOISE = 'AR'
    STRIPE_FED = 'SF'
    STRIPE_NOFED = 'SN'
    COMMANDE = "CM"
    CASH = 'CA'
    CREDIT_CARD_NOFED = 'CC'
    OCECO = 'OC'

    @param apps:
    @param schema_editor:
    @return:
    """

    Configuration = apps.get_model("APIcashless", "Configuration")
    # MoyenPaiement = apps.get_model("APIcashless", "MoyenPaiement")

    try :
        configuration = Configuration.objects.first()
        cash : MoyenPaiement = configuration.moyen_paiement_espece


        if cash :
            if cash.categorie != MoyenPaiement.CASH :
                cash.categorie = MoyenPaiement.CASH
                cash.save()

        credit_card_nofed: MoyenPaiement = configuration.moyen_paiement_cb
        if credit_card_nofed:
            if credit_card_nofed.categorie != MoyenPaiement.CREDIT_CARD_NOFED:
                credit_card_nofed.categorie = MoyenPaiement.CREDIT_CARD_NOFED
                credit_card_nofed.save()

        stripe_nofed: MoyenPaiement = configuration.moyen_paiement_mollie
        if stripe_nofed :
            if stripe_nofed.categorie != MoyenPaiement.STRIPE_NOFED:
                stripe_nofed.categorie = MoyenPaiement.STRIPE_NOFED
                stripe_nofed.save()

        commande: MoyenPaiement = configuration.moyen_paiement_commande
        if commande:
            if commande.categorie != MoyenPaiement.COMMANDE:
                commande.categorie = MoyenPaiement.COMMANDE
                commande.save()

        oceco: MoyenPaiement = configuration.moyen_paiement_oceco
        if oceco:
            if oceco.categorie != MoyenPaiement.OCECO:
                oceco.categorie = MoyenPaiement.OCECO
                oceco.save()

        local_euro: MoyenPaiement = configuration.monnaie_principale
        if local_euro:
            if local_euro.categorie != MoyenPaiement.LOCAL_EURO:
                local_euro.categorie = MoyenPaiement.LOCAL_EURO
                local_euro.save()

        local_gift: MoyenPaiement = configuration.monnaie_principale_cadeau
        if local_gift:
            if local_gift.categorie != MoyenPaiement.LOCAL_GIFT:
                local_gift.categorie = MoyenPaiement.LOCAL_GIFT
                local_gift.save()

        ardoise: MoyenPaiement = configuration.monnaie_principale_ardoise
        if ardoise:
            if ardoise.categorie != MoyenPaiement.ARDOISE:
                ardoise.categorie = MoyenPaiement.ARDOISE
                ardoise.save()

        # federated_currency: MoyenPaiement = configuration.federated_currency
        # if federated_currency:
        #     if federated_currency.categorie != MoyenPaiement.STRIPE_FED:
        #         federated_currency.categorie = MoyenPaiement.STRIPE_FED
        #         federated_currency.save()

        moyen_paiement_fractionne: MoyenPaiement = configuration.moyen_paiement_fractionne
        if moyen_paiement_fractionne:
            if moyen_paiement_fractionne.categorie != MoyenPaiement.FRACTIONNE:
                moyen_paiement_fractionne.categorie = MoyenPaiement.FRACTIONNE
                moyen_paiement_fractionne.save()

    except Exception as e:
        print(e)
        # import ipdb; ipdb.set_trace()


def reverse(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('APIcashless', '0160_auto_20230407_2055'),
    ]

    operations = [
        migrations.RunPython(set_categorie_to_moyen_paiement, reverse),
    ]

